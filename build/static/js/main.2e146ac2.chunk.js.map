{"version":3,"sources":["components/CartItem/CartItem.module.css","components/AdminProductItem/AdminProductItem.module.css","pages/Home/Home.module.css","pages/Login/Login.module.css","components/AdminUserItem/AdminUserItem.module.css","components/AdminAddProduct/AdminAddProduct.module.css","pages/Profile/Profile.module.css","typings/ui.ts","context/index.tsx","components/Search/index.tsx","components/Header/index.tsx","redux/actions/user.ts","typings/user.ts","redux/actions/product.ts","typings/product.ts","redux/actions/ui.ts","pages/Product/index.tsx","hooks/useProduct.ts","components/ProductCard/index.tsx","pages/Home/index.tsx","components/GoogleLoginButton/index.tsx","pages/Login/index.tsx","components/CartItem/index.tsx","pages/Cart/index.tsx","components/AdminProductItem/index.tsx","components/AdminAddProduct/index.tsx","hooks/useUser.ts","components/AdminUserItem/index.tsx","components/GoogleLogoutButton/index.tsx","pages/Profile/index.tsx","ProtectedRoute.tsx","Routes.tsx","App.tsx","redux/reducers/product.ts","redux/reducers/ui.ts","redux/reducers/user.ts","redux/reducers/index.ts","redux/sagas/index.ts","redux/store.ts","hooks/useToTop.ts","components/Toast/index.tsx","index.tsx","components/Header/Header.module.css","components/ProductCard/ProductCard.module.css","components/Search/Search.module.css","pages/Cart/Cart.module.css","pages/Product/Product.module.css"],"names":["module","exports","IntentType","themes","light","foreground","background","icon","text","deg","dark","innitialState","theme","switchTheme","ThemeContext","React","createContext","Search","query","setQuery","useContext","bg","backgroundColor","tx","color","className","styles","container__search","style","icon__search","search","value","onChange","event","target","button__close","onClick","icon__close","Header","location","useLocation","pathname","useHistory","fg","cart","useSelector","state","product","inCart","user","token","currentUser","container","left","to","autoplay","loop","src","require","height","width","left__text","right","login","userName","button__cart","icon__cart","cart__counter","length","addUser","type","payload","updateUser","list","_id","cartResult","map","a","quantity","result","Array","from","Set","concat","dispatch","fetch","method","headers","Authorization","body","JSON","stringify","then","response","json","data","console","log","forEach","item","find","p","addProduct","catch","error","authorizeUserDB","banStatus","isBanned","authorizeUser","removeProduct","removeProductDB","index","findIndex","splice","addToast","toast","validationSchema","Yup","shape","sizes","required","variants","ProductPage","useState","setQuantity","id","useParams","productIsInCart","useDispatch","formik","useFormik","initialValues","onSubmit","values","cartItem","push","parseInt","window","confirm","message","intent","WARNING","updatedUser","addProductDB","name","INFO","SUCCESS","txfg","addQuantity","prev","reduceQuantity","error__container","error__text","error__icon","img","description","price","categories","loading","lightVibrant","container__inner","vibrant","img__container","alt","form","handleSubmit","span","select","htmlFor","handleChange","defaultValue","disabled","hidden","size","key","errors","variant","quantity__container","quantity__button","button","useProduct","setData","products","useEffect","res","receiveProducts","sorted","filter","toLowerCase","includes","ProductCard","noFlag","isInCart","usePalette","draggable","indicator","Home","GoogleLoginButton","history","responseGoogle","axios","post","id_token","tokenId","status","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Login","CartItem","Cart","sum","reduce","b","title","toFixed","container__cart","AdminProductItem","backgroundImage","removeProductList","removeProductListDB","min","max","integer","positive","AdminAddProduct","addProductList","touched","placeholder","as","arrayHelpers","category","remove","button__add","button__submit","useUser","users","receiveUsers","AdminUserItem","email","isAdmin","GoogleLogoutButton","logout","onLogoutSuccess","Profile","tab","tab__list","selectedClassName","tab__list__selected","tab__panel","tab__panel__grid","ProtectedRoute","Component","component","rest","render","props","Routes","exact","path","App","action","productExist","defaultState","ui","createRootReducer","combineReducers","saveState","rootSaga","localStorage","setItem","all","takeLatest","initState","withRouter","unlisten","listen","scrollTo","Toast","toastState","ERROR","success","info","warning","store","initialState","sagaMiddleware","createSagaMiddleware","middlewares","thunk","composeEnhancers","compose","localState","getItem","newLocalState","parse","modifiedLocalState","createStore","applyMiddleware","run","makeStore","WithProvider","autoClose","hideProgressBar","transition","Slide","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2e146ac2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CartItem_container__3fETS\",\"button\":\"CartItem_button__txwhI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AdminProductItem_container__3aeFy\",\"icon\":\"AdminProductItem_icon__SohsZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__1s89M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__3g5c8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AdminUserItem_container__35kxS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AdminAddProduct_form__1OuCN\",\"error\":\"AdminAddProduct_error__2Y5Xr\",\"button__add\":\"AdminAddProduct_button__add__3GUVg\",\"button__submit\":\"AdminAddProduct_button__submit__1G47y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__WdMDr\",\"tab\":\"Profile_tab__Ky2p2\",\"tab__list\":\"Profile_tab__list__say6h\",\"tab__list__selected\":\"Profile_tab__list__selected__33Pa4\",\"tab__panel\":\"Profile_tab__panel__P1lBV\",\"tab__panel__grid\":\"Profile_tab__panel__grid__CUgu_\"};","// Enum\nexport const TOGGLE_DIALOG = \"TOGGLE_DIALOG\";\nexport const TOAST_MESSAGE = \"TOAST_MESSAGE\";\n\n// export enum DialogType {\n//     SignIn = \"signIn\",\n//     SignUp = \"signUp\",\n// }\n\n// export type ToggleDialogAction = {\n//     type: typeof TOGGLE_DIALOG;\n//     payload: {\n//         dialog: DialogType;\n//     };\n// };\nexport enum IntentType {\n    SUCCESS = \"SUCCESS\",\n    ERROR = \"ERROR\",\n    INFO = \"INFO\",\n    WARNING = \"WARNING\",\n}\n\nexport type ToastMessage = {\n    message: string;\n    intent?: IntentType;\n};\n\n// export type UiActions = ToggleDialogAction;\nexport type ChangeToastMessage = {\n    type: typeof TOAST_MESSAGE;\n    payload: {\n        toast: ToastMessage;\n    };\n};\nexport type UiActions = ChangeToastMessage;\nexport type UiState = {\n    // dialogOpen: {\n    //     [key in DialogType]?: boolean;\n    // };\n    toast: ToastMessage;\n};\n","import React, { useState } from \"react\";\n\nimport { ContextChildrenProps } from \"../typings\";\n\nexport const themes = {\n    light: {\n        foreground: \"#8eed4d\",\n        background: \"#dbfac5\",\n        icon: \"#424242\",\n        text: \"#000000\",\n        deg: \"rotate(0deg)\",\n    },\n    dark: {\n        foreground: \"#424242\",\n        background: \"#6d6d6d\",\n        icon: \"#8eed4d\",\n        text: \"#ffffff\",\n        deg: \"rotate(180deg)\",\n    },\n};\n\nconst innitialState = {\n    theme: themes.dark,\n    switchTheme: () => {},\n};\nexport const ThemeContext = React.createContext(innitialState);\n\nexport const ThemeProvider = ({ children }: ContextChildrenProps) => {\n    const [theme, setTheme] = useState(themes.light);\n\n    const switchTheme = () => {\n        setTheme(prevState => {\n            if (prevState === themes.light) {\n                return themes.dark;\n            } else {\n                return themes.light;\n            }\n        });\n    };\n    const value = { theme, switchTheme };\n\n    return (\n        <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { AiOutlineSearch, AiOutlineClose } from \"react-icons/ai\";\n\nimport { HeaderProps } from \"../../typings\";\nimport { ThemeContext } from \"../../context\";\nimport styles from \"./Search.module.css\";\n\nexport const Search = ({ query, setQuery }: HeaderProps) => {\n    const { theme } = useContext(ThemeContext);\n    const bg = { backgroundColor: theme.background };\n    const tx = { color: theme.text };\n    return (\n        <div className={styles.container__search} style={bg}>\n            <AiOutlineSearch\n                className={styles.icon__search}\n                style={tx}\n            ></AiOutlineSearch>\n            <input\n                style={{ ...bg, ...tx }}\n                className={styles.search}\n                value={query}\n                onChange={event => setQuery(event.target.value)}\n            ></input>\n            <button\n                style={bg}\n                className={styles.button__close}\n                onClick={() => setQuery(\"\")}\n            >\n                <AiOutlineClose\n                    style={tx}\n                    className={styles.icon__close}\n                ></AiOutlineClose>\n            </button>\n        </div>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { Player } from \"@lottiefiles/react-lottie-player\";\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport { AppState, HeaderProps } from \"../../typings\";\nimport { Search } from \"../Search\";\nimport { ThemeContext } from \"../../context\";\nimport styles from \"./Header.module.css\";\n\nexport const Header = ({ query, setQuery }: HeaderProps) => {\n    const { theme } = useContext(ThemeContext);\n    const location = useLocation();\n    const history = useHistory();\n    const { pathname } = location;\n    const fg = { backgroundColor: theme.foreground };\n    const bg = { backgroundColor: theme.background };\n    const tx = { color: theme.text };\n    // const regex = RegExp(\"/product\");\n    // const result = regex.test(pathname);\n    const cart = useSelector((state: AppState) => state.product.inCart);\n    const { token, currentUser } = useSelector((state: AppState) => state.user);\n    const goHome = () => {\n        history.push(\"/\");\n    };\n    return (\n        <div className={styles.container} style={fg}>\n            <Link className={styles.left} to=\"/\">\n                <Player\n                    autoplay\n                    loop\n                    src={require(\"./shoppin.json\")}\n                    style={{ height: \"90px\", width: \"90px\" }}\n                />\n                <p style={tx} className={styles.left__text}>\n                    E-Commerce\n                </p>\n            </Link>\n            {pathname === \"/\" && <Search query={query} setQuery={setQuery} />}\n            <div className={styles.right}>\n                {token ? (\n                    <Link className={styles.login} style={tx} to=\"/profile\">\n                        {currentUser.userName}\n                    </Link>\n                ) : (\n                    <Link className={styles.login} style={tx} to=\"/login\">\n                        Login\n                    </Link>\n                )}\n\n                <Link className={styles.button__cart} to=\"/cart\">\n                    <AiOutlineShoppingCart\n                        className={styles.icon__cart}\n                        style={tx}\n                    ></AiOutlineShoppingCart>\n                    <div\n                        className={styles.cart__counter}\n                        style={{ ...tx, ...bg }}\n                    >\n                        {cart.length}\n                    </div>\n                </Link>\n            </div>\n        </div>\n    );\n};\n","import { Dispatch } from \"redux\";\n\nimport {\n    ADD_USER,\n    UserActions,\n    User,\n    ADD_TOKEN,\n    Product,\n    REMOVE_USER,\n    RECEIVE_USERS,\n    AUTHORIZE_USERS,\n    ProductInCart,\n    ProductInfo,\n} from \"../../typings\";\nimport { addProduct } from \"../actions\";\n\n//Add LOCAL data\nexport const addUser = (user: User): UserActions => {\n    return {\n        type: ADD_USER,\n        payload: {\n            user,\n        },\n    };\n};\n\n//Remove LOCAl/Logout\nexport const removeUser = (user: User): UserActions => {\n    return {\n        type: REMOVE_USER,\n        payload: {\n            user,\n        },\n    };\n};\n//Ban/Unban\nexport const authorizeUser = (user: User): UserActions => {\n    return {\n        type: AUTHORIZE_USERS,\n        payload: {\n            user,\n        },\n    };\n};\n\nexport const addToken = (token: string): UserActions => {\n    return {\n        type: ADD_TOKEN,\n        payload: {\n            token,\n        },\n    };\n};\n//User list\nexport const receiveUsers = (users: User[]): UserActions => {\n    return {\n        type: RECEIVE_USERS,\n        payload: {\n            users,\n        },\n    };\n};\n\nexport const updateUser = (\n    user: User,\n    token: string,\n    cart: ProductInCart[],\n    list: Product[]\n) => {\n    const { _id } = user;\n    //Extracted IDs\n    const cartResult = cart.map(a => ({\n        quantity: a.quantity,\n        product: a._id,\n    }));\n    //Unique Set\n    const result = Array.from(new Set(cartResult.concat(user.cart)));\n    const updateUser = { ...user, cart: [...result] };\n    return (dispatch: Dispatch) => {\n        fetch(`http://localhost:3001/api/v1/users/${_id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"bearer \" + token,\n            },\n            body: JSON.stringify(updateUser),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Success update:\", data);\n                dispatch(addUser(data));\n\n                data.cart.forEach((item: ProductInfo) => {\n                    const result = list.find(p => p._id === item.product);\n                    result &&\n                        dispatch(\n                            addProduct({ ...result, quantity: item.quantity })\n                        );\n                });\n            })\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    };\n};\n\nexport const fetchUsers = () => {\n    return (dispatch: Dispatch) => {\n        return fetch(\"http://localhost:3001/api/v1/users/\").then(res =>\n            res.json().then(users => {\n                dispatch(receiveUsers(users));\n            })\n        );\n    };\n};\n\nexport const authorizeUserDB = (\n    user: User,\n    banStatus: boolean,\n    _id: string,\n    token: string\n) => {\n    return (dispatch: Dispatch) => {\n        const updateUser = { ...user, isBanned: `${banStatus}` };\n\n        return fetch(`http://localhost:3001/api/v1/users/${_id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"bearer \" + token,\n            },\n            body: JSON.stringify(updateUser),\n        })\n            .then(response => response.json())\n            .then(data => {\n                dispatch(authorizeUser(data));\n            })\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    };\n};\n","export const ADD_USER = \"ADD_USER\";\nexport const REMOVE_USER = \"REMOVE_USER\";\nexport const ADD_TOKEN = \"ADD_TOKEN\";\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\nexport const AUTHORIZE_USERS = \"AUTHORIZE_USERS\";\n\nexport type ProductInfo = {\n    quantity: number;\n    product: string;\n};\n\nexport type User = {\n    _id: string;\n    userName: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    isAdmin: boolean;\n    isBanned: boolean;\n    password: string;\n    googleId: string;\n    cart: ProductInfo[];\n};\n\nexport type ReceiveUsersAction = {\n    type: typeof RECEIVE_USERS;\n    payload: {\n        users: User[];\n    };\n};\n\nexport type AddUserAction = {\n    type: typeof ADD_USER;\n    payload: {\n        user: User;\n    };\n};\n\nexport type RemoveUserAction = {\n    type: typeof REMOVE_USER;\n    payload: {\n        user: User;\n    };\n};\n\nexport type AuthorizeUserAction = {\n    type: typeof AUTHORIZE_USERS;\n    payload: {\n        user: User;\n    };\n};\n\nexport type AddTokenAction = {\n    type: typeof ADD_TOKEN;\n    payload: {\n        token: string;\n    };\n};\nexport type UserState = {\n    list: User[];\n    currentUser: User;\n    token: string;\n};\n\nexport type UserActions =\n    | AddUserAction\n    | AddTokenAction\n    | RemoveUserAction\n    | AuthorizeUserAction\n    | ReceiveUsersAction;\n","import { Dispatch } from \"redux\";\n\nimport { addUser } from \"./user\";\nimport {\n    User,\n    ProductActions,\n    Product,\n    RECEIVE_PRODUCTS,\n    REMOVE_PRODUCT,\n    REMOVE_PRODUCT_LIST,\n    ADD_PRODUCT,\n    ADD_PRODUCT_LIST,\n    ProductInCart,\n} from \"../../typings\";\n\n//Add product to LOCAL cart\nexport const addProduct = (product: ProductInCart): ProductActions => {\n    return {\n        type: ADD_PRODUCT,\n        payload: {\n            product,\n        },\n    };\n};\n//Remove product from LOCAL cart\nexport function removeProduct(product: Product): ProductActions {\n    return {\n        type: REMOVE_PRODUCT,\n        payload: {\n            product,\n        },\n    };\n}\n//Send all fetched products list items to LOCAL list\nexport const receiveProducts = (products: Product[]): ProductActions => {\n    return {\n        type: RECEIVE_PRODUCTS,\n        payload: {\n            products,\n        },\n    };\n};\n//Add to product list\nexport const addProductList = (product: Product): ProductActions => {\n    return {\n        type: ADD_PRODUCT_LIST,\n        payload: {\n            product,\n        },\n    };\n};\n//Remove from product list\nexport const removeProductList = (product: Product): ProductActions => {\n    return {\n        type: REMOVE_PRODUCT_LIST,\n        payload: {\n            product,\n        },\n    };\n};\n\n//TODO: Fix API link after upload\n//TODO: FIX addProductListDB using token both front and back-end\n//Fetch list items\nexport const fetchProducts = () => {\n    return (dispatch: Dispatch) => {\n        return fetch(\"http://localhost:3001/api/v1/products\").then(res =>\n            res.json().then(products => {\n                dispatch(receiveProducts(products));\n            })\n        );\n    };\n};\n//Add product to REMOTE cart\nexport const addProductDB = (\n    user: User,\n    product: ProductInCart,\n    _id: string,\n    token: string\n) => {\n    return (dispatch: Dispatch) => {\n        let updatedUser = {};\n        const productExist = user.cart.find(p => p.product === product._id);\n        if (productExist) {\n            updatedUser = { ...user };\n        } else {\n            const result = Array.from(\n                new Set(\n                    [\n                        { quantity: product.quantity, product: product._id },\n                    ].concat(user.cart)\n                )\n            );\n            updatedUser = { ...user, cart: [...result] };\n        }\n\n        return fetch(`http://localhost:3001/api/v1/users/${_id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"bearer \" + token,\n            },\n            body: JSON.stringify(updatedUser),\n        })\n            .then(response => response.json())\n            .then(data => {\n                dispatch(addProduct(product));\n                if (data._id) {\n                    dispatch(addUser(data));\n                }\n            })\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    };\n};\n//Add product to REMOTE list\nexport const addProductListDB = (product: Product) => {\n    console.log(\"in action\", JSON.stringify(product));\n    return (dispatch: Dispatch) => {\n        return fetch(\"http://localhost:3001/api/v1/products/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(product),\n        })\n            .then(response => response.json())\n            .then(data => {\n                dispatch(addProductList(data));\n            })\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    };\n};\n//Remove product from REMOVE cart\nexport const removeProductDB = (\n    user: User,\n    product: Product,\n    _id: string,\n    token: string\n) => {\n    return (dispatch: Dispatch) => {\n        const index = user.cart.findIndex(p => p.product === product._id);\n        if (index >= 0) {\n            user.cart.splice(index, 1);\n        }\n        const updateUser = { ...user };\n        console.log(\"redux/action\", updateUser);\n\n        return fetch(`http://localhost:3001/api/v1/users/${_id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"bearer \" + token,\n            },\n            body: JSON.stringify(updateUser),\n        })\n            .then(response => response.json())\n            .then(data => {\n                dispatch(removeProduct(product));\n            })\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    };\n};\n//Remoe product from remote list\nexport const removeProductListDB = (_id: string, product: Product) => {\n    return (dispatch: Dispatch) => {\n        return fetch(`http://localhost:3001/api/v1/products/${_id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        })\n            .then(res => {\n                console.log(\"response data\", res);\n                res.status === 204 && dispatch(removeProductList(product));\n            })\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    };\n};\n","export const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const ADD_PRODUCT_LIST = \"ADD_PRODUCT_LIST\";\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\nexport const REMOVE_PRODUCT_LIST = \"REMOVE_PRODUCT_LIST\";\nexport const RECEIVE_PRODUCTS = \"RECEIVE_PRODUCTS\";\n\nexport type Product = {\n    _id?: string;\n    name: string;\n    description: string;\n    categories: string[];\n    variants: string[];\n    sizes: number[];\n    img: string;\n    price: number;\n};\nexport type ProductInCart = Product & {\n    quantity: number;\n};\n\nexport type ReceiveProductsAction = {\n    type: typeof RECEIVE_PRODUCTS;\n    payload: {\n        products: Product[];\n    };\n};\nexport type AddProductAction = {\n    type: typeof ADD_PRODUCT;\n    payload: {\n        product: ProductInCart;\n    };\n};\n\nexport type AddProductListAction = {\n    type: typeof ADD_PRODUCT_LIST;\n    payload: {\n        product: Product;\n    };\n};\n\nexport type RemoveProductAction = {\n    type: typeof REMOVE_PRODUCT;\n    payload: {\n        product: Product;\n    };\n};\n\nexport type RemoveProductListAction = {\n    type: typeof REMOVE_PRODUCT_LIST;\n    payload: {\n        product: Product;\n    };\n};\n\nexport type ProductActions =\n    | AddProductAction\n    | AddProductListAction\n    | RemoveProductAction\n    | RemoveProductListAction\n    | ReceiveProductsAction;\n\nexport type ProductCardProps = {\n    product: Product;\n    noFlag?: boolean;\n};\nexport type ProductState = {\n    inCart: ProductInCart[];\n    list: Product[];\n};\n","import { TOAST_MESSAGE, UiActions, ToastMessage } from \"../../typings\";\n\n// export function toggleDialog(dialog: DialogType): ToggleDialogAction {\n//     return {\n//         type: TOGGLE_DIALOG,\n//         payload: {\n//             dialog,\n//         },\n//     };\n// }\n\nexport const addToast = (toast: ToastMessage): UiActions => {\n    return {\n        type: TOAST_MESSAGE,\n        payload: {\n            toast,\n        },\n    };\n};\n","import React, { useContext, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Palette } from \"react-palette\";\nimport {\n    addProduct,\n    addProductDB,\n    addToast,\n    removeProduct,\n    removeProductDB,\n} from \"../../redux/actions\";\nimport { AppState, RouteParam, ProductInCart, IntentType } from \"../../typings\";\nimport { ThemeContext } from \"../../context\";\nimport styles from \"./Product.module.css\";\n\nconst validationSchema = Yup.object().shape({\n    sizes: Yup.string().required(\"  Required\"),\n    variants: Yup.string().required(\"  Required\"),\n});\n\nexport const ProductPage = () => {\n    const [quantity, setQuantity] = useState(1);\n    const { theme } = useContext(ThemeContext);\n    const { id } = useParams<RouteParam>();\n    const product = useSelector((state: AppState) =>\n        state.product.list.find(p => p._id === id)\n    );\n    const productIsInCart = useSelector((state: AppState) =>\n        state.product.inCart.find(p => p._id === id)\n    );\n    const { currentUser, token } = useSelector((state: AppState) => state.user);\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            sizes: \"\",\n            variants: \"\",\n        },\n        validationSchema,\n        onSubmit: values => {\n            if (product) {\n                const cartItem: ProductInCart = { ...product, ...{ quantity } };\n                cartItem.sizes = [];\n                cartItem.sizes.push(parseInt(values.sizes));\n                cartItem.variants = [];\n                cartItem.variants.push(values.variants);\n                const { _id } = currentUser;\n                if (productIsInCart) {\n                    const updateCartConfirmation = window.confirm(\n                        \"Product is already in cart, do you want to update your selection?\"\n                    );\n                    if (updateCartConfirmation === true) {\n                        if (_id) {\n                            dispatch(\n                                removeProductDB(\n                                    currentUser,\n                                    product,\n                                    _id,\n                                    token\n                                )\n                            );\n                        } else {\n                            dispatch(removeProduct(product));\n                        }\n                    } else {\n                        dispatch(\n                            addToast({\n                                message: \"Your cart was not updated\",\n                                intent: IntentType.WARNING,\n                            })\n                        );\n                        return;\n                    }\n                }\n                if (_id) {\n                    dispatch(addProductDB(currentUser, cartItem, _id, token));\n                } else {\n                    dispatch(addProduct({ ...cartItem }));\n                }\n                if (productIsInCart) {\n                    dispatch(\n                        addToast({\n                            message: `Updated ${product.name} in cart.`,\n                            intent: IntentType.INFO,\n                        })\n                    );\n                } else {\n                    dispatch(\n                        addToast({\n                            message: `Added ${product.name} to cart.`,\n                            intent: IntentType.SUCCESS,\n                        })\n                    );\n                }\n            }\n        },\n    });\n\n    const fg = { backgroundColor: theme.foreground };\n    const bg = { backgroundColor: theme.background };\n    const tx = { color: theme.text };\n    const txfg = { color: theme.foreground };\n\n    const addQuantity = () => {\n        setQuantity(prev => (prev += 1));\n    };\n    const reduceQuantity = () => {\n        if (quantity === 0) {\n            return;\n        }\n        setQuantity(prev => (prev -= 1));\n    };\n\n    if (!product) {\n        return (\n            <div className={styles.container} style={{ ...bg, ...tx }}>\n                <div className={styles.error__container}>\n                    <h2 className={styles.error__text}> Product not found</h2>\n                    <Link type=\"button\" to=\"/\">\n                        <AiOutlineArrowLeft\n                            className={styles.error__icon}\n                            style={txfg}\n                        ></AiOutlineArrowLeft>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n    const {\n        img,\n        name,\n        description,\n        sizes,\n        variants,\n        price,\n        categories,\n    } = product;\n    return (\n        <Palette src={img}>\n            {({ data, loading, error }) => (\n                <>\n                    {loading ? (\n                        <div style={bg} className={styles.container}>\n                            <div className=\"spinner\" />\n                        </div>\n                    ) : (\n                        <div\n                            className={styles.container}\n                            style={{ backgroundColor: data.lightVibrant }}\n                        >\n                            <div\n                                className={styles.container__inner}\n                                style={{ backgroundColor: data.vibrant }}\n                            >\n                                <div className={styles.img__container}>\n                                    <img\n                                        alt=\"product_image\"\n                                        className={styles.img}\n                                        src={img}\n                                    ></img>\n                                </div>\n                                <div className={styles.form}>\n                                    <form\n                                        onSubmit={formik.handleSubmit}\n                                        style={tx}\n                                    >\n                                        <p>\n                                            <span className={styles.span}>\n                                                Product Name:\n                                            </span>{\" \"}\n                                            {name}\n                                        </p>\n                                        <p>\n                                            <span className={styles.span}>\n                                                Product Description:\n                                            </span>{\" \"}\n                                            {description}\n                                        </p>\n                                        <p>\n                                            <span className={styles.span}>\n                                                Product Category:\n                                            </span>{\" \"}\n                                            {categories}\n                                        </p>\n                                        <p>\n                                            <span className={styles.span}>\n                                                Price:\n                                            </span>{\" \"}\n                                            {price} EUR\n                                        </p>\n                                        <div className={styles.select}>\n                                            <label\n                                                htmlFor=\"sizes\"\n                                                className={styles.span}\n                                            >\n                                                Sizes:\n                                            </label>\n                                            <select\n                                                name=\"sizes\"\n                                                id=\"sizes\"\n                                                value={formik.values.sizes}\n                                                onChange={formik.handleChange}\n                                            >\n                                                <option\n                                                    value=\"\"\n                                                    defaultValue=\"\"\n                                                    disabled\n                                                    hidden\n                                                >\n                                                    Choose here\n                                                </option>\n                                                {sizes.map((size, index) => (\n                                                    <option\n                                                        value={size}\n                                                        key={index}\n                                                    >\n                                                        {size}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                            {formik.errors.sizes\n                                                ? formik.errors.sizes\n                                                : null}\n                                        </div>\n                                        <div className={styles.select}>\n                                            <label\n                                                htmlFor=\"variants\"\n                                                className={styles.span}\n                                            >\n                                                Variants:\n                                            </label>\n                                            <select\n                                                name=\"variants\"\n                                                id=\"variants\"\n                                                value={formik.values.variants}\n                                                onChange={formik.handleChange}\n                                            >\n                                                <option\n                                                    value=\"\"\n                                                    defaultValue=\"\"\n                                                    disabled\n                                                    hidden\n                                                >\n                                                    Choose here\n                                                </option>\n                                                {variants.map(\n                                                    (variant, index) => (\n                                                        <option\n                                                            value={variant}\n                                                            key={index}\n                                                        >\n                                                            {variant}\n                                                        </option>\n                                                    )\n                                                )}\n                                            </select>\n                                            {formik.errors.variants\n                                                ? formik.errors.variants\n                                                : null}\n                                        </div>\n                                        <div\n                                            className={\n                                                styles.quantity__container\n                                            }\n                                        >\n                                            <p className={styles.span}>\n                                                Quantity:{\" \"}\n                                            </p>\n                                            <button\n                                                type=\"button\"\n                                                className={\n                                                    styles.quantity__button\n                                                }\n                                                style={{ ...bg, ...tx }}\n                                                onClick={reduceQuantity}\n                                            >\n                                                -\n                                            </button>\n                                            <p className={styles.span}>\n                                                {quantity}\n                                            </p>\n                                            <button\n                                                type=\"button\"\n                                                className={\n                                                    styles.quantity__button\n                                                }\n                                                style={{ ...bg, ...tx }}\n                                                onClick={addQuantity}\n                                            >\n                                                +\n                                            </button>\n                                        </div>\n                                        <button\n                                            type=\"submit\"\n                                            className={styles.button}\n                                            style={{ ...bg, ...tx }}\n                                        >\n                                            Add to cart\n                                        </button>\n                                    </form>\n                                </div>\n                            </div>\n                            <Link type=\"button\" to=\"/\">\n                                <AiOutlineArrowLeft\n                                    className={styles.error__icon}\n                                    style={{ color: data.vibrant }}\n                                ></AiOutlineArrowLeft>\n                            </Link>\n                        </div>\n                    )}\n                </>\n            )}\n        </Palette>\n    );\n};\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { fetchProducts } from \"../redux/actions/\";\nimport { AppState, Product } from \"../typings\";\n\nexport const useProduct = (query: string) => {\n    const [data, setData] = useState<Product[]>([]);\n    const dispatch = useDispatch();\n    const products = useSelector((state: AppState) => state.product.list);\n    useEffect(() => {\n        dispatch(fetchProducts());\n    }, []);\n    useEffect(() => {\n        setData(products);\n    }, [products]);\n    useEffect(() => {\n        const sorted = [...products].filter((product: Product) =>\n            product.name.toLowerCase().includes(query.toLowerCase())\n        );\n        setData(sorted);\n    }, [query, products]);\n    return [data];\n};\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { usePalette } from \"react-palette\";\n\nimport { ProductCardProps, AppState } from \"../../typings\";\nimport { ThemeContext } from \"../../context\";\nimport styles from \"./ProductCard.module.css\";\n\nexport const ProductCard = ({ product, noFlag }: ProductCardProps) => {\n    const { theme } = useContext(ThemeContext);\n    const cart = useSelector((state: AppState) => state.product.inCart);\n\n    const { name, price, img, _id } = product;\n    const isInCart = cart.find(p => p.name === name);\n    const { data, loading } = usePalette(img);\n    const fg = { backgroundColor: data.vibrant };\n    const tx = { color: theme.text };\n\n    return (\n        <>\n            {!loading ? (\n                <Link\n                    className={styles.container}\n                    style={fg}\n                    to={`/product/${_id}`}\n                >\n                    {console.log(\"test\")}\n                    <div className={styles.img__container}>\n                        <img\n                            alt=\"product_image\"\n                            className={styles.img}\n                            src={img}\n                            draggable=\"false\"\n                        ></img>\n                    </div>\n                    <p className={styles.name} style={tx}>\n                        {name}\n                    </p>\n                    <p className={styles.price} style={tx}>{`${price} EUR`}</p>\n                    {isInCart && !noFlag && (\n                        <div className={styles.indicator} style={fg}>\n                            {isInCart.quantity}\n                        </div>\n                    )}\n                </Link>\n            ) : (\n                <div className=\"spinner\" />\n            )}\n        </>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Product, HomeProps, AppState } from \"../../typings\";\nimport { useProduct } from \"../../hooks/useProduct\";\nimport { ProductCard } from \"../../components/ProductCard\";\nimport { ThemeContext } from \"../../context\";\nimport styles from \"./Home.module.css\";\n\nexport const Home = ({ query }: HomeProps) => {\n    const [products] = useProduct(query);\n    const { theme } = useContext(ThemeContext);\n    const { currentUser } = useSelector((state: AppState) => state.user);\n    const { isBanned } = currentUser;\n    const bg = { backgroundColor: theme.background };\n    if (isBanned) {\n        return <div> YOU ARE BANNED</div>;\n    }\n    return (\n        <div className={styles.container} style={bg}>\n            {products.length === 0 ? (\n                <p>No Product</p>\n            ) : (\n                <>\n                    {products.map((product: Product) => (\n                        <ProductCard\n                            product={product}\n                            key={product._id}\n                        ></ProductCard>\n                    ))}\n                </>\n            )}\n        </div>\n    );\n};\n","import React from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { AppState, IntentType } from \"../../typings\";\nimport { addToast, addToken, updateUser } from \"../../redux/actions\";\n\nexport const GoogleLoginButton = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector((state: AppState) => state.product.inCart);\n    const list = useSelector((state: AppState) => state.product.list);\n\n    const history = useHistory();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const responseGoogle = async (response: any) => {\n        console.log(\"test\", response);\n        const res = await axios.post(\n            \"http://localhost:3001/api/v1/auth/googleTokenId\",\n            {\n                id_token: response.tokenId,\n            }\n        );\n        if (res.status === 200) {\n            dispatch(updateUser(res.data.user, res.data.token, cart, list));\n            dispatch(addToken(res.data.token));\n            dispatch(\n                addToast({\n                    message: `Logged in as ${res.data.user.userName}`,\n                    intent: IntentType.INFO,\n                })\n            );\n            history.push(\"/\");\n        }\n    };\n    return (\n        <GoogleLogin\n            clientId=\"676751270206-bih2psso6vca65bg6ecicj7i4o42h940.apps.googleusercontent.com\"\n            buttonText=\"Login\"\n            onSuccess={responseGoogle}\n            onFailure={responseGoogle}\n            cookiePolicy={\"single_host_origin\"}\n        />\n    );\n};\n","import React, { useContext } from \"react\";\nimport { GoogleLoginButton } from \"../../components/GoogleLoginButton\";\n\nimport { ThemeContext } from \"../../context\";\nimport styles from \"./Login.module.css\";\n\nexport const Login = () => {\n    const { theme } = useContext(ThemeContext);\n    const bg = { backgroundColor: theme.background };\n    return (\n        <div className={styles.container} style={bg}>\n            <GoogleLoginButton></GoogleLoginButton>\n            <p>Normal registration comming soon</p>\n        </div>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { removeProduct, removeProductDB, addToast } from \"../../redux/actions\";\nimport { CartItemProps, AppState, IntentType } from \"../../typings\";\nimport { ProductCard } from \"../ProductCard\";\nimport { ThemeContext } from \"../../context\";\nimport styles from \"./CartItem.module.css\";\n\nexport const CartItem = ({ item }: CartItemProps) => {\n    const dispatch = useDispatch();\n    const { theme } = useContext(ThemeContext);\n    const { currentUser, token } = useSelector((state: AppState) => state.user);\n    const fg = { backgroundColor: theme.foreground };\n    const tx = { color: theme.text };\n    const { _id } = currentUser;\n    const onClick = () => {\n        if (_id) {\n            dispatch(removeProductDB(currentUser, item, _id, token));\n        } else {\n            dispatch(removeProduct(item));\n        }\n        dispatch(\n            addToast({\n                message: \"Item removed from cart\",\n                intent: IntentType.SUCCESS,\n            })\n        );\n    };\n    return (\n        <div className={styles.container}>\n            <ProductCard product={item} key={item._id} />\n            <button\n                className={styles.button}\n                style={{ ...fg, ...tx }}\n                onClick={onClick}\n            >\n                Remove from cart\n            </button>\n        </div>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { AppState } from \"../../typings\";\nimport { ThemeContext } from \"../../context\";\nimport { CartItem } from \"../../components/CartItem\";\nimport styles from \"./Cart.module.css\";\n\nexport const Cart = () => {\n    const { theme } = useContext(ThemeContext);\n    const cart = useSelector((state: AppState) => state.product.inCart);\n    const bg = { backgroundColor: theme.background };\n    const sum = cart.reduce((a, b) => a + b.price * b.quantity, 0);\n\n    return (\n        <div className={styles.container} style={bg}>\n            <h2 className={styles.title}>Your shopping cart</h2>\n            {cart.length === 0 ? (\n                <h3 className={styles.title}>is empty!</h3>\n            ) : (\n                <>\n                    <h3 className={styles.title}>\n                        Total cost: {sum.toFixed(2)} €\n                    </h3>\n                    <div className={styles.container__cart}>\n                        {cart.map(item => (\n                            <CartItem key={item._id} item={item}></CartItem>\n                        ))}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { GiCancel } from \"react-icons/gi\";\nimport { useDispatch } from \"react-redux\";\n\nimport { removeProductListDB } from \"../../redux/actions\";\nimport { AdminProductItemProps } from \"../../typings\";\nimport { ThemeContext } from \"../../context\";\n\nimport styles from \"./AdminProductItem.module.css\";\n\nexport const AdminProductItem = ({ product }: AdminProductItemProps) => {\n    const { _id, name, img } = product;\n    const { theme } = useContext(ThemeContext);\n    const dispatch = useDispatch();\n    const tx = { color: theme.text };\n\n    //TODO: Add token to delete API\n    const removeProduct = () => {\n        _id && dispatch(removeProductListDB(_id, product));\n    };\n    return (\n        <div\n            className={styles.container}\n            style={{ ...tx, backgroundImage: `url(${img})` }}\n        >\n            <div>\n                <h3>{name}</h3>\n                <h5>{_id}</h5>\n            </div>\n            <GiCancel className={styles.icon} onClick={removeProduct} />\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Formik, Form, Field, FieldArray } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from \"yup\";\n\nimport { addProductListDB, addToast } from \"../../redux/actions\";\nimport { AdminAddProductProps, IntentType } from \"../../typings\";\nimport styles from \"./AdminAddProduct.module.css\";\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(2, \"Too Short!\")\n        .max(20, \"Too Long!\")\n        .required(),\n    description: Yup.string()\n        .min(10, \"Too Short!\")\n        .max(60, \"Too Long!\")\n        .required(),\n    categories: Yup.string().required(),\n    sizes: Yup.number()\n        .required()\n        .integer(),\n    variants: Yup.string().required(),\n    price: Yup.number()\n        .required()\n        .positive()\n        .integer(),\n});\nexport const AdminAddProduct = ({ token }: AdminAddProductProps) => {\n    const dispatch = useDispatch();\n    return (\n        <div className={styles.container}>\n            <h2>Add new product to the store</h2>\n            <Formik\n                initialValues={{\n                    name: \"\",\n                    description: \"\",\n                    categories: [],\n                    variants: [],\n                    sizes: [],\n                    img: \"\",\n                    price: 0,\n                }}\n                validationSchema={validationSchema}\n                onSubmit={values => {\n                    dispatch(addProductListDB(values));\n                    dispatch(\n                        addToast({\n                            message: \"Product Added to DB\",\n                            intent: IntentType.SUCCESS,\n                        })\n                    );\n                    dispatch(\n                        addToast({\n                            message: \"\",\n                        })\n                    );\n                }}\n            >\n                {({ values, errors, touched }) => (\n                    <Form className={styles.form}>\n                        <label htmlFor=\"name\">Product name:</label>\n                        <Field id=\"name\" name=\"name\" placeholder=\"Red Shirt\" />\n                        {errors.name && touched.name ? (\n                            <div className={styles.error}>{errors.name}</div>\n                        ) : null}\n                        <label htmlFor=\"description\">\n                            Product description:\n                        </label>\n                        <Field\n                            as=\"textarea\"\n                            id=\"description\"\n                            name=\"description\"\n                            placeholder=\"This product is...\"\n                        />\n                        {errors.description && touched.description && (\n                            <div className={styles.error}>\n                                {errors.description}\n                            </div>\n                        )}\n                        <label htmlFor=\"img\">Product image:</label>\n                        <Field\n                            id=\"img\"\n                            name=\"img\"\n                            placeholder=\"source from unsplash.com\"\n                        />\n                        <label htmlFor=\"img\">Product price:</label>\n                        <Field\n                            type=\"number\"\n                            id=\"price\"\n                            name=\"price\"\n                            placeholder=\"in EUR\"\n                        />\n                        {errors.price && touched.price && (\n                            <div className={styles.error}>{errors.price}</div>\n                        )}\n                        <label htmlFor=\"categories\">Categories:</label>\n                        <FieldArray name=\"categories\">\n                            {arrayHelpers => (\n                                <>\n                                    {values.categories &&\n                                    values.categories.length > 0 ? (\n                                        values.categories.map(\n                                            (category, index) => (\n                                                <div key={category}>\n                                                    <Field\n                                                        name={`categories.${index}`}\n                                                    />\n                                                    <button\n                                                        type=\"button\"\n                                                        onClick={() =>\n                                                            arrayHelpers.remove(\n                                                                index\n                                                            )\n                                                        }\n                                                    >\n                                                        -\n                                                    </button>\n                                                    <button\n                                                        type=\"button\"\n                                                        onClick={() =>\n                                                            arrayHelpers.push(\n                                                                \"\"\n                                                            )\n                                                        }\n                                                    >\n                                                        +\n                                                    </button>\n                                                </div>\n                                            )\n                                        )\n                                    ) : (\n                                        <button\n                                            className={styles.button__add}\n                                            type=\"button\"\n                                            onClick={() =>\n                                                arrayHelpers.push(\"\")\n                                            }\n                                        >\n                                            Add a category\n                                        </button>\n                                    )}\n                                </>\n                            )}\n                        </FieldArray>\n                        {errors.categories && touched.categories && (\n                            <div className={styles.error}>\n                                {errors.categories}\n                            </div>\n                        )}\n                        <label htmlFor=\"variants\">Variants:</label>\n                        <FieldArray name=\"variants\">\n                            {arrayHelpers => (\n                                <>\n                                    {values.variants &&\n                                    values.variants.length > 0 ? (\n                                        values.variants.map(\n                                            (variant, index) => (\n                                                <div key={variant}>\n                                                    <Field\n                                                        name={`variants.${index}`}\n                                                    />\n                                                    <button\n                                                        type=\"button\"\n                                                        onClick={() =>\n                                                            arrayHelpers.remove(\n                                                                index\n                                                            )\n                                                        }\n                                                    >\n                                                        -\n                                                    </button>\n                                                    <button\n                                                        type=\"button\"\n                                                        onClick={() =>\n                                                            arrayHelpers.push(\n                                                                \"\"\n                                                            )\n                                                        }\n                                                    >\n                                                        +\n                                                    </button>\n                                                </div>\n                                            )\n                                        )\n                                    ) : (\n                                        <button\n                                            className={styles.button__add}\n                                            type=\"button\"\n                                            onClick={() =>\n                                                arrayHelpers.push(\"\")\n                                            }\n                                        >\n                                            Add a variant\n                                        </button>\n                                    )}\n                                </>\n                            )}\n                        </FieldArray>\n                        {errors.variants && touched.variants && (\n                            <div className={styles.error}>\n                                {errors.variants}\n                            </div>\n                        )}\n                        <label htmlFor=\"sizes\">Sizes:</label>\n                        <FieldArray name=\"sizes\">\n                            {arrayHelpers => (\n                                <>\n                                    {values.sizes && values.sizes.length > 0 ? (\n                                        values.sizes.map((size, index) => (\n                                            <div key={size}>\n                                                <Field\n                                                    type=\"number\"\n                                                    name={`sizes.${index}`}\n                                                />\n                                                <button\n                                                    type=\"button\"\n                                                    onClick={() =>\n                                                        arrayHelpers.remove(\n                                                            index\n                                                        )\n                                                    }\n                                                >\n                                                    -\n                                                </button>\n                                                <button\n                                                    type=\"button\"\n                                                    onClick={() =>\n                                                        arrayHelpers.push(0)\n                                                    }\n                                                >\n                                                    +\n                                                </button>\n                                            </div>\n                                        ))\n                                    ) : (\n                                        <button\n                                            className={styles.button__add}\n                                            type=\"button\"\n                                            onClick={() => arrayHelpers.push(0)}\n                                        >\n                                            Add a size\n                                        </button>\n                                    )}\n                                </>\n                            )}\n                        </FieldArray>\n                        {errors.sizes && touched.sizes && (\n                            <div className={styles.error}>{errors.sizes}</div>\n                        )}\n                        <div>\n                            <button\n                                className={styles.button__submit}\n                                type=\"submit\"\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { fetchUsers } from \"../redux/actions/\";\nimport { AppState, User } from \"../typings\";\n\nexport const useUser = () => {\n    const [data, setData] = useState<User[]>([]);\n    const dispatch = useDispatch();\n    const users = useSelector((state: AppState) => state.user.list);\n\n    useEffect(() => {\n        dispatch(fetchUsers());\n    }, []);\n    useEffect(() => {\n        setData(users);\n    }, [users]);\n    return [data];\n};\n","import React, { useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { authorizeUserDB } from \"../../redux/actions\";\nimport { ThemeContext } from \"../../context\";\nimport { AdminUserItemProps, AppState } from \"../../typings\";\nimport styles from \"./AdminUserItem.module.css\";\n\nexport const AdminUserItem = ({ user }: AdminUserItemProps) => {\n    const { token } = useSelector((state: AppState) => state.user);\n    const { theme } = useContext(ThemeContext);\n    const dispatch = useDispatch();\n    const tx = { color: theme.text };\n    const fg = { backgroundColor: theme.foreground };\n    const { _id, userName, email, isAdmin, isBanned } = user;\n    return (\n        <div className={styles.container} style={{ ...fg, ...tx }}>\n            <div>\n                <p>\n                    User Name: {userName} {isAdmin && <span> - Admin</span>}\n                </p>\n                <p>Id: {_id}</p>\n                <p>Email: {email}</p>\n            </div>\n            {!isAdmin && (\n                <>\n                    {!isBanned ? (\n                        <button\n                            onClick={() => {\n                                dispatch(\n                                    authorizeUserDB(user, true, _id, token)\n                                );\n                            }}\n                        >\n                            Ban\n                        </button>\n                    ) : (\n                        <button\n                            onClick={() => {\n                                dispatch(\n                                    authorizeUserDB(user, false, _id, token)\n                                );\n                            }}\n                        >\n                            Unban\n                        </button>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n","import React from \"react\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { removeUser, addToast } from \"../../redux/actions\";\nimport { AppState, IntentType } from \"../../typings\";\n\nexport const GoogleLogoutButton = () => {\n    const { currentUser } = useSelector((state: AppState) => state.user);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const logout = async () => {\n        history.push(\"/\");\n        dispatch(removeUser(currentUser));\n        dispatch(\n            addToast({\n                message: \"Logged out\",\n                intent: IntentType.INFO,\n            })\n        );\n    };\n    return (\n        <GoogleLogout\n            clientId=\"676751270206-bih2psso6vca65bg6ecicj7i4o42h940.apps.googleusercontent.com\"\n            buttonText=\"Logout\"\n            onLogoutSuccess={logout}\n        ></GoogleLogout>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { AppState } from \"../../typings\";\nimport { ThemeContext } from \"../../context\";\nimport { AdminProductItem } from \"../../components/AdminProductItem\";\nimport { AdminAddProduct } from \"../../components/AdminAddProduct\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { AdminUserItem } from \"../../components/AdminUserItem\";\nimport { GoogleLogoutButton } from \"../../components/GoogleLogoutButton\";\nimport styles from \"./Profile.module.css\";\n\nexport const Profile = () => {\n    const { theme } = useContext(ThemeContext);\n    const { currentUser, token } = useSelector((state: AppState) => state.user);\n    const { list } = useSelector((state: AppState) => state.product);\n    const bg = { backgroundColor: theme.background };\n    const tx = { color: theme.text };\n    const { userName, isAdmin } = currentUser;\n    const [users] = useUser();\n    return (\n        <div className={styles.container} style={bg}>\n            <p>\n                {userName} {isAdmin && <span>- ADMIN</span>}\n            </p>\n            <GoogleLogoutButton></GoogleLogoutButton>\n            {isAdmin && (\n                <Tabs className={styles.tab}>\n                    <TabList className={styles.tab__list}>\n                        <Tab\n                            style={tx}\n                            selectedClassName={styles.tab__list__selected}\n                        >\n                            Users\n                        </Tab>\n                        <Tab\n                            style={tx}\n                            selectedClassName={styles.tab__list__selected}\n                        >\n                            Products\n                        </Tab>\n                        <Tab\n                            style={tx}\n                            selectedClassName={styles.tab__list__selected}\n                        >\n                            Add Product\n                        </Tab>\n                    </TabList>\n                    <TabPanel className={styles.tab__panel}>\n                        <h2>User managements here</h2>\n                        <div className={styles.tab__panel__grid}>\n                            {users.map(item => (\n                                <AdminUserItem\n                                    key={item._id}\n                                    user={item}\n                                ></AdminUserItem>\n                            ))}\n                        </div>\n                    </TabPanel>\n                    <TabPanel className={styles.tab__panel}>\n                        <h2>Remove products from the store</h2>\n                        <div className={styles.tab__panel__grid}>\n                            {list.map(item => (\n                                <AdminProductItem\n                                    key={item._id}\n                                    product={item}\n                                ></AdminProductItem>\n                            ))}\n                        </div>\n                    </TabPanel>\n                    <TabPanel className={styles.tab__panel}>\n                        <AdminAddProduct token={token} />\n                    </TabPanel>\n                </Tabs>\n            )}\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { AppState } from \"./typings\";\n\nexport const ProtectedRoute = ({ component: Component, ...rest }: any) => {\n    const { currentUser, token } = useSelector((state: AppState) => state.user);\n    return (\n        <Route\n            {...rest}\n            render={props => {\n                if (currentUser && token) {\n                    return <Component {...props} />;\n                } else {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/\",\n                                state: {\n                                    from: props.location,\n                                },\n                            }}\n                        />\n                    );\n                }\n            }}\n        />\n    );\n};\n","import React, { useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { Header } from \"./components/Header\";\nimport { ProductPage } from \"./pages/Product\";\nimport { Home } from \"./pages/Home\";\nimport { Login } from \"./pages/Login\";\nimport { Cart } from \"./pages/Cart\";\nimport { Profile } from \"./pages/Profile\";\nimport { ProtectedRoute } from \"./ProtectedRoute\";\n\nconst Routes = () => {\n    const [query, setQuery] = useState(\"\");\n    return (\n        <>\n            <Header query={query} setQuery={setQuery}></Header>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                    component={() => <Home query={query} />}\n                ></Route>\n                <Route exact path=\"/product/:id\" component={ProductPage} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/cart\" component={Cart} />\n                <ProtectedRoute exact path=\"/profile\" component={Profile} />\n                <Route path=\"*\" component={() => <p>404 not found</p>} />\n            </Switch>\n        </>\n    );\n};\n\nexport default Routes;\n","import React from \"react\";\n\nimport Routes from \"./Routes\";\n\nexport default function App() {\n    return <Routes />;\n}\n","import {\n    ProductState,\n    ProductActions,\n    RECEIVE_PRODUCTS,\n    ADD_PRODUCT,\n    REMOVE_PRODUCT,\n    ADD_PRODUCT_LIST,\n    REMOVE_PRODUCT_LIST,\n} from \"../../typings\";\n\nexport default function products(\n    state: ProductState = {\n        list: [],\n        inCart: [],\n    },\n    action: ProductActions\n): ProductState {\n    switch (action.type) {\n        case RECEIVE_PRODUCTS:\n            const { products } = action.payload;\n            return {\n                ...state,\n                list: [...products],\n            };\n        case ADD_PRODUCT: {\n            const { product } = action.payload;\n            const productExist = state.inCart.find(\n                p => p.name === product.name\n            );\n            if (productExist) {\n                return state;\n            }\n            return {\n                ...state,\n                inCart: [...state.inCart, { ...product }],\n            };\n        }\n        case ADD_PRODUCT_LIST: {\n            const { product } = action.payload;\n            const productExist = state.inCart.find(\n                p => p.name === product.name\n            );\n            if (productExist) {\n                return state;\n            }\n            return { ...state, list: [...state.list, product] };\n        }\n        case REMOVE_PRODUCT: {\n            const { product } = action.payload;\n            const index = state.inCart.findIndex(p => p.name === product.name);\n            if (index >= 0) {\n                state.inCart.splice(index, 1);\n                return { ...state, inCart: [...state.inCart] };\n            }\n            return state;\n        }\n        case REMOVE_PRODUCT_LIST: {\n            const { product } = action.payload;\n            const index = state.list.findIndex(p => p.name === product.name);\n            if (index >= 0) {\n                state.list.splice(index, 1);\n                return { ...state, list: [...state.list] };\n            }\n            return state;\n        }\n        default:\n            return state;\n    }\n}\n","import { UiState, UiActions, ToastMessage, TOAST_MESSAGE } from \"../../typings\";\n\nconst defaultState: UiState = {\n    // dialogOpen: {},\n    toast: {} as ToastMessage,\n};\n\nexport default function ui(\n    state: UiState = defaultState,\n    action: UiActions\n): UiState {\n    switch (action.type) {\n        // case TOGGLE_DIALOG: {\n        //     return {\n        //         ...state,\n        //         dialogOpen: {\n        //             ...state.dialogOpen,\n        //             [action.payload.dialog]: !state.dialogOpen[\n        //                 action.payload.dialog\n        //             ],\n        //         },\n        //     };\n        // }\n        case TOAST_MESSAGE: {\n            const { toast } = action.payload;\n            return { ...state, toast };\n        }\n\n        default:\n            return state;\n    }\n}\n","import {\n    UserState,\n    UserActions,\n    ADD_USER,\n    ADD_TOKEN,\n    REMOVE_USER,\n    RECEIVE_USERS,\n    AUTHORIZE_USERS,\n    User,\n} from \"../../typings\";\n\nexport default function users(\n    state: UserState = {\n        list: [],\n        currentUser: {} as User,\n        token: \"\",\n    },\n    action: UserActions\n): UserState {\n    switch (action.type) {\n        case AUTHORIZE_USERS: {\n            const { user } = action.payload;\n            const index = state.list.findIndex(p => p._id === user._id);\n            if (index >= 0) {\n                state.list[index] = { ...user };\n                return { ...state, list: [...state.list] };\n            }\n            return state;\n        }\n        case RECEIVE_USERS:\n            const { users } = action.payload;\n            return {\n                ...state,\n                list: [...users],\n            };\n        case ADD_USER: {\n            const { user } = action.payload;\n            return { ...state, currentUser: user };\n        }\n        case REMOVE_USER: {\n            return { ...state, currentUser: {} as User, token: \"\" };\n        }\n        case ADD_TOKEN: {\n            const { token } = action.payload;\n            return { ...state, token: token };\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\n\nimport product from \"./product\";\nimport ui from \"./ui\";\nimport user from \"./user\";\n\nconst createRootReducer = () =>\n    combineReducers({\n        product,\n        ui,\n        user,\n    });\n\nexport default createRootReducer;\n","// import { all } from \"redux-saga/effects\";\n\n// import productSagas from \"./product\";\n// import uiSagas from \"./ui\";\n\n// export default function* rootSaga() {\n//     yield all([...productSagas, ...uiSagas]);\n// }\nimport { all, select, takeLatest } from \"redux-saga/effects\";\n\nfunction* saveState() {\n    const state = yield select();\n    yield localStorage.setItem(\"initState\", JSON.stringify(state));\n}\n\nexport default function* rootSaga() {\n    yield all([takeLatest(\"*\", saveState)]);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport thunk from \"redux-thunk\";\n\nimport { AppState, User, ToastMessage } from \"../typings\";\nimport createRootReducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\n\nconst initState: AppState = {\n    product: {\n        inCart: [],\n        list: [],\n    },\n    ui: {\n        toast: {} as ToastMessage,\n    },\n    user: {\n        list: [],\n        currentUser: {} as User,\n        token: \"\",\n    },\n};\n\nexport default function makeStore(initialState = initState) {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware, thunk];\n    let composeEnhancers = compose;\n    // localStorage.clear();\n    const localState = localStorage.getItem(\"initState\");\n    if (localState) {\n        const newLocalState = JSON.parse(localState);\n        //Override local saved Toast\n        const modifiedLocalState = { ...newLocalState, ui: { toast: {} } };\n        initialState = modifiedLocalState;\n    }\n    // localState && (initialState = JSON.parse(localState));\n    if (process.env.NODE_ENV === \"development\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            composeEnhancers = (window as any)\n                .__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n        }\n    }\n\n    const store = createStore(\n        createRootReducer(),\n        initialState,\n        composeEnhancers(applyMiddleware(...middlewares))\n    );\n\n    sagaMiddleware.run(rootSaga);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if ((module as any).hot) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (module as any).hot.accept(\"./reducers\", () => {\n            const nextReducer = require(\"./reducers\").default;\n            store.replaceReducer(nextReducer);\n        });\n    }\n\n    return store;\n}\n","import { useEffect } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n\nconst ScrollToTop: React.FC<RouteComponentProps> = ({ history }) => {\n    useEffect(() => {\n        const unlisten = history.listen(() => {\n            window.scrollTo(0, 0);\n        });\n        return () => {\n            unlisten();\n        };\n    }, [history]);\n\n    return null;\n};\n\nexport default withRouter(ScrollToTop);\n","import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\nimport { AppState, IntentType } from \"../../typings\";\nexport const Toast = () => {\n    const toastState = useSelector((state: AppState) => state.ui.toast);\n    const { message, intent } = toastState;\n    useEffect(() => {\n        if (message) {\n            if (message.length > 0) {\n                switch (intent) {\n                    case IntentType.ERROR:\n                        toast.error(message);\n                        break;\n                    case IntentType.SUCCESS:\n                        toast.success(message);\n                        break;\n                    case IntentType.INFO:\n                        toast.info(message);\n                        break;\n                    case IntentType.WARNING:\n                        toast.warning(message);\n                        break;\n                    default:\n                        toast(message);\n                }\n            }\n        }\n    }, [message, intent]);\n    return null;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ToastContainer, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport App from \"./App\";\nimport makeStore from \"./redux/store\";\nimport ScrollToTop from \"./hooks/useToTop\";\nimport { Toast } from \"./components/Toast\";\nimport \"./index.css\";\n\nconst store = makeStore();\n\nconst WithProvider = () => (\n    <Provider store={store}>\n        <ToastContainer autoClose={1500} hideProgressBar transition={Slide} />\n        <Toast></Toast>\n        <Router>\n            <ScrollToTop></ScrollToTop>\n            <App />\n        </Router>\n    </Provider>\n);\n\nReactDOM.render(<WithProvider />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__1VC87\",\"right\":\"Header_right__XlGVu\",\"left\":\"Header_left__3z1Uk\",\"login\":\"Header_login__3V3Qa\",\"left__text\":\"Header_left__text__3q9gc\",\"cart__counter\":\"Header_cart__counter__8vYBY\",\"icon__cart\":\"Header_icon__cart__3eUaa\",\"button__cart\":\"Header_button__cart__3dH3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProductCard_container__YzadG\",\"indicator\":\"ProductCard_indicator__1_6Jp\",\"name\":\"ProductCard_name__1gdZZ\",\"price\":\"ProductCard_price__34xye\",\"img__container\":\"ProductCard_img__container__2_YSZ\",\"img\":\"ProductCard_img__3Ieho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3OUtB\",\"container__search\":\"Search_container__search__1q-0P\",\"icon__search\":\"Search_icon__search__1QEWZ\",\"icon__close\":\"Search_icon__close__1Knqj\",\"button__close\":\"Search_button__close__1-VkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cart_container__n9zxW\",\"title\":\"Cart_title__1_2px\",\"container__cart\":\"Cart_container__cart__1Di3u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Product_container__FFEgi\",\"error__text\":\"Product_error__text__1MPq0\",\"error__container\":\"Product_error__container__1MshR\",\"error__icon\":\"Product_error__icon__3GtM8\",\"container__inner\":\"Product_container__inner__3HWB4\",\"img__container\":\"Product_img__container__gzYWL\",\"img\":\"Product_img__2AyD0\",\"form\":\"Product_form__9lKYj\",\"select\":\"Product_select__12Bvf\",\"span\":\"Product_span__1-Ub1\",\"button\":\"Product_button__1is2K\",\"quantity__container\":\"Product_quantity__container__34Del\",\"quantity__button\":\"Product_quantity__button__26REB\"};"],"sourceRoot":""}